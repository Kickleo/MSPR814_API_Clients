name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build, Test API & Push to Dockerhub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
    
      - name: Create Dependency Check Cache Directory
        run: mkdir -p ~/.dependency-check/data

      - name: Cache OWASP Dependency-Check Data
        uses: actions/cache@v4
        with:
          # Chemin par défaut utilisé par Dependency Check sur le runner
          path: ~/.dependency-check/data
          # Clé basée sur le système d'exploitation et un hash du pom.xml
          key: dependency-check-${{ runner.os }}-${{ hashFiles('**/OWASPDepCheckVers') }}
          restore-keys: |
            dependency-check-${{ runner.os }}-

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build Spring API
        run: mvn clean package

      - name: Run Dependency Check
        run: mvn verify -Dnvd.api.key=${{ secrets.NVD_API_KEY }}

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Kickleo_MSPR814_API_Clients -Dsonar.organization=kickleo-1 -Dsonar.host.url=https://sonarcloud.io

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: target/dependency-check-report.html

      - name: Run tests
        run: mvn test

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t leotepedelen/clients:${{ github.sha }} .

      - name: Push Docker image
        run: docker push leotepedelen/clients:${{ github.sha }}
